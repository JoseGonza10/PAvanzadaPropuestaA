// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SiteAsientos.Models;

#nullable disable

namespace SiteAsientos.Migrations
{
    [DbContext(typeof(CubreasientosContext))]
    [Migration("20241216044536_Migration-15-12-2024-3")]
    partial class Migration151220243
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SiteAsientos.Models.Design", b =>
                {
                    b.Property<int>("Design_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Design_Id"));

                    b.Property<string>("Design_Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Design_Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Design_MaterialId")
                        .HasColumnType("int");

                    b.Property<float>("Design_Price")
                        .HasColumnType("real");

                    b.Property<string>("Design_Service")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Design_Status")
                        .HasColumnType("bit");

                    b.Property<float>("Design_Taxable")
                        .HasColumnType("real");

                    b.Property<int?>("Order_Id")
                        .HasColumnType("int");

                    b.HasKey("Design_Id");

                    b.HasIndex("Design_MaterialId");

                    b.HasIndex("Order_Id");

                    b.ToTable("Design");
                });

            modelBuilder.Entity("SiteAsientos.Models.Employee", b =>
                {
                    b.Property<int>("Employee_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Employee_Id"));

                    b.Property<string>("Employee_Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Employee_LastName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Employee_MiddleName")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Employee_Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Employee_Password")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Employee_Phone")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<bool>("Employee_Status")
                        .HasColumnType("bit");

                    b.Property<string>("Employee_Type")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Employee_Id");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("SiteAsientos.Models.Image", b =>
                {
                    b.Property<int>("Image_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Image_Id"));

                    b.Property<byte[]>("Image_Content")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Image_DesignId")
                        .HasColumnType("int");

                    b.HasKey("Image_Id");

                    b.HasIndex("Image_DesignId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("SiteAsientos.Models.Invoice", b =>
                {
                    b.Property<int>("Invoice_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Invoice_Id"));

                    b.Property<float?>("Invoice_AmoundPaid")
                        .HasColumnType("real");

                    b.Property<string>("Invoice_Code")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Invoice_CustomerEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Invoice_CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Invoice_CustomerPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Invoice_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Invoice_OrderId")
                        .HasColumnType("int");

                    b.Property<float?>("Invoice_Total")
                        .HasColumnType("real");

                    b.HasKey("Invoice_Id");

                    b.HasIndex("Invoice_OrderId")
                        .IsUnique();

                    b.ToTable("Invoice");
                });

            modelBuilder.Entity("SiteAsientos.Models.Material", b =>
                {
                    b.Property<int>("Material_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Material_Id"));

                    b.Property<string>("Material_Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<bool>("Material_Status")
                        .HasColumnType("bit");

                    b.Property<int?>("Material_SupplierId")
                        .HasColumnType("int");

                    b.HasKey("Material_Id");

                    b.HasIndex("Material_SupplierId");

                    b.ToTable("Material");
                });

            modelBuilder.Entity("SiteAsientos.Models.Order", b =>
                {
                    b.Property<int>("Order_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Order_Id"));

                    b.Property<string>("Order_CarBrand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Order_CarModel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Order_Code")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Order_CustomerEmail")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Order_CustomerId")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Order_CustomerName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Order_CustomerPhone")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Order_CustomerPlateNumber")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<DateTime>("Order_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Order_Embroidery")
                        .HasColumnType("bit");

                    b.Property<string>("Order_ModelYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Order_Status")
                        .HasColumnType("bit");

                    b.HasKey("Order_Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("SiteAsientos.Models.Supplier", b =>
                {
                    b.Property<int>("Supplier_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Supplier_Id"));

                    b.Property<string>("Supplier_Address")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("Supplier_DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<string>("Supplier_Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Supplier_Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Supplier_Phone")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<bool>("Supplier_Status")
                        .HasColumnType("bit");

                    b.HasKey("Supplier_Id");

                    b.ToTable("Supplier");
                });

            modelBuilder.Entity("SiteAsientos.Models.Visit", b =>
                {
                    b.Property<int>("Visit_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Visit_Id"));

                    b.Property<string>("Visit_Code")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<DateTime>("Visit_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Visit_EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("Visit_OrderId")
                        .HasColumnType("int");

                    b.Property<bool>("Visit_Status")
                        .HasColumnType("bit");

                    b.Property<string>("Visit_Type")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Visit_Id");

                    b.HasIndex("Visit_EmployeeId");

                    b.HasIndex("Visit_OrderId");

                    b.ToTable("Visit");
                });

            modelBuilder.Entity("SiteAsientos.Models.Design", b =>
                {
                    b.HasOne("SiteAsientos.Models.Material", "Material")
                        .WithMany("Designs")
                        .HasForeignKey("Design_MaterialId");

                    b.HasOne("SiteAsientos.Models.Order", "Order")
                        .WithMany("Designs")
                        .HasForeignKey("Order_Id");

                    b.Navigation("Material");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("SiteAsientos.Models.Image", b =>
                {
                    b.HasOne("SiteAsientos.Models.Design", "Design")
                        .WithMany("Images")
                        .HasForeignKey("Image_DesignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Design");
                });

            modelBuilder.Entity("SiteAsientos.Models.Invoice", b =>
                {
                    b.HasOne("SiteAsientos.Models.Order", "Order")
                        .WithOne("Invoice")
                        .HasForeignKey("SiteAsientos.Models.Invoice", "Invoice_OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("SiteAsientos.Models.Material", b =>
                {
                    b.HasOne("SiteAsientos.Models.Supplier", "Supplier")
                        .WithMany("Materials")
                        .HasForeignKey("Material_SupplierId");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("SiteAsientos.Models.Visit", b =>
                {
                    b.HasOne("SiteAsientos.Models.Employee", "Employee")
                        .WithMany("Visits")
                        .HasForeignKey("Visit_EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SiteAsientos.Models.Order", "Order")
                        .WithMany("Visits")
                        .HasForeignKey("Visit_OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("SiteAsientos.Models.Design", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("SiteAsientos.Models.Employee", b =>
                {
                    b.Navigation("Visits");
                });

            modelBuilder.Entity("SiteAsientos.Models.Material", b =>
                {
                    b.Navigation("Designs");
                });

            modelBuilder.Entity("SiteAsientos.Models.Order", b =>
                {
                    b.Navigation("Designs");

                    b.Navigation("Invoice");

                    b.Navigation("Visits");
                });

            modelBuilder.Entity("SiteAsientos.Models.Supplier", b =>
                {
                    b.Navigation("Materials");
                });
#pragma warning restore 612, 618
        }
    }
}
